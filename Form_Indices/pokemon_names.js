/**
 * ? there should be 273 pokemon with special forms
 *
 * Sample html where we can find the pokemon name:
 * !there were some spans that did not match the example above.  i went to the html and deleted them
 *
 * <span class="mw-headline" id="Abomasnow"><a href="/wiki/Abomasnow" title="Abomasnow">Abomasnow</a></span>
 * use document.getElementsByTagName("span") to select all spans
 *
 * each span holds an anchor tag as a child node
 * document.getElementsByTagName("span")[0] to select the anchor element nodes
 *
 * each anchor tag has a test node as a child
 * use document.getElementsByTagName("span")[0].childNodes[0] to select the text node contained within the anchor tag
 *
 * each text node's value can be read with .innerHTML
 * use document.getElementsByTagName("span")[0].childNodes[0].innerHTML to get the text from the text nodes
 *
 * use document.getElementsByTagName("span").length to get the length of the HTML Collection
 *
 * with the length, we can loop through the collection, and add each name to an array via array.push(name)
 *
 * with .lastElementChild, we can get the last child element, which is where our Index Name column exists
 */
// let rawNames = document.getElementsByTagName("span");

// let arrayOfNames = [];
// for (i = 0; i < rawNames.length; i++) {
//   let name = rawNames[i].childNodes[0].innerHTML;
//   arrayOfNames.push(name);
// }

// tableBoides is the HTML Collection of tbody elements, i.e. our pokemon form table
// tableBodies.length will give us the length of the collection (which should be 273)
// let tableBodies = document.getElementsByTagName("tbody");

// this will collect arrays where [0] is the pokemon name, and [1-x] will be their forms if any
// let bigArray = [];

// This pulls the pokemon's form from the html and puts them into an array
// for (i = 0; i < tableBodies.length; i++) {
//   let name = rawNames[i].childNodes[0].innerHTML;
//   let pokemonArray = [];
//   pokemonArray.push(name);
//   //we are inside all pokemon
//   for (j = 0; j < tableBodies[i].children.length; j++) {
//     //we are inside all rows
//     // this gets us just the index name column's inner text => the form names

//     let formName = tableBodies[i].children[j].lastElementChild.innerText;

//     if (
//       formName !== "Index Name" &&
//       formName !== "-" &&
//       formName !== "Mega" &&
//       formName !== "Index Number" &&
//       formName !== "0" &&
//       formName !== "1" &&
//       formName !== "2" &&
//       formName !== "3"
//     ) {
//       // only add form names for forms we can actually catch
//       pokemonArray.push(formName);
//       // show the array with the newly added name
//     }
//   }
//   bigArray.push(pokemonArray);
// }

// create arrays for each special form to hold the pokemon who appear in the given form
//inserted AlterForm
let AlterForm = [
  "Aegislash",
  "Azumarill",
  "Bagon",
  "Baltoy",
  "Claydol",
  "Doublade",
  "Froakie",
  "Frogadier",
  "Greninja",
  "Honedge",
  "Kecleon",
  "Marill",
  "Porygon",
  "Porygon-Z",
  "Porygon2",
  "Pyukumuku",
  "Rayquaza",
  "Salamence",
  "Shedinja",
  "Shelgon",
  "Volcarona",
  "Zoroark",
  "Zorua",
];
//inserted AshenForm
let AshenForm = ["Arcanine", "Centiskorch", "Dragonite", "Dustox", "Gengar", "Houndoom", "Hydreigon", "Roserade", "Talonflame", "Umbreon"];

//inserted CreatorForm
let CreatorForm = ["Dragonite", "Eevee", "Xerneas"];

// inserted DrownedForm
let DrownedForm = [
  "Claydol",
  "Finneon",
  "Flygon",
  "Gyarados",
  "Kingdra",
  "Lumineon",
  "Lugia",
  "Octillery",
  "Omastar",
  "Pikachu",
  "Pyukumuku",
  "Qwilfish",
  "Rapidash",
  "Relicanth",
  "Remoraid",
  "Sableye",
  "Starmie",
  "Tentacruel",
];
// inserted PinkForm
let PinkForm = [
  "Amoonguss",
  "Beedrill",
  "Bellossom",
  "Bellsprout",
  "Butterfree",
  "Caterpie",
  "Diglett",
  "Dodrio",
  "Doduo",
  "Dubwool",
  "Dugtrio",
  "Exeggcute",
  "Exeggutor",
  "Gloom",
  "Kakuna",
  "Mankey",
  "Mareep",
  "Metapod",
  "Misdreavus",
  "Mismagius",
  "Nidoking",
  "Nidoqueen",
  "Nidorina",
  "Nidorino",
  "Nidoran♂",
  "Nidoran♀",
  "Oddish",
  "Paras",
  "Parasect",
  "Pidgeot",
  "Pidgeotto",
  "Pidgey",
  "Primeape",
  "Raticate",
  "Rattata",
  "Rhydon",
  "Rhyhorn",
  "Rhyperior",
  "Venomoth",
  "Venonat",
  "Victreebel",
  "Vileplume",
  "Weedle",
  "Weepinbell",
  "Wooloo",
];
// inserted RainbowForm
let RainbowForm = [
  "Beautifly",
  "Crawdaunt",
  "Cresselia",
  "Dustox",
  "Feebas",
  "Ho-Oh",
  "Infernape",
  "Kecleon",
  "Milotic",
  "Ponyta",
  "Rapidash",
  "Skarmory",
  "Weavile",
];
// inserted SpiritForm
let SpiritForm = [
  "Breloom",
  "Cresselia",
  "Dragapult",
  "Drakloak",
  "Dreepy",
  "Eevee",
  "Espeon",
  "Flareon",
  "Glaceon",
  "Jolteon",
  "Leafeon",
  "Mareanie",
  "Milotic",
  "Porygon2",
  "Regieleki",
  "Shroomish",
  "Suicune",
  "Sylveon",
  "Toxapex",
  "Umbreon",
  "Vaporeon",
];
// inserted SummerForm
let SummerForm = ["Deerling", "Electrode", "Lopunny", "Raichu", "Sawsbuck", "Snorlax"];

// inserted StrikeForm
let StrikeForm = [
  "Boltund",
  "Crobat",
  "Eevee",
  "Electivire",
  "Espeon",
  "Gallade",
  "Gardevoir",
  "Golbat",
  "Jolteon",
  "Kirlia",
  "Leafeon",
  "Ninetales",
  "Poliwrath",
  "Ralts",
  "Sneasel",
  "Umbreon",
  "Vaporeon",
  "Vivillon",
  "Vulpix",
  "Weavile",
  "Yamper",
  "Zubat",
];

// inserted ValencianForm
let ValencianForm = [
  "Bellossom",
  "Bellsprout",
  "Blissey",
  "Butterfree",
  "Caterpie",
  "Chansey",
  "Gloom",
  "Magikarp",
  "Metapod",
  "Nidoking",
  "Nidoqueen",
  "Nidorina",
  "Nidorino",
  "Nidoran♂",
  "Nidoran♀",
  "Oddish",
  "Paras",
  "Parasect",
  "Poliwag",
  "Raticate",
  "Rattata",
  "Shellder",
  "Victreebel",
  "Vileplume",
  "Weepinbell",
];

// inserted ValentineForm
let ValentineForm = ["Gardevoir", "Koffing", "Spinda", "Weezing"];

// inserted ZombieForm
let ZombieForm = [
  "Arcanine",
  "Blastoise",
  "Blaziken",
  "Charizard",
  "Chesnaught",
  "Delphox",
  "Ditto",
  "Emboar",
  "Empoleon",
  "Greninja",
  "Greninja",
  "Gyarados",
  "Infernape",
  "Meganium",
  "Sableye",
  "Samurott",
  "Sceptile",
  "Serperior",
  "Swampert",
  "Torterra",
  "Typhlosion",
  "Venusaur",
];

// collect the forms arrays into a larger array
let formsArray = [
  AlterForm,
  AshenForm,
  CreatorForm,
  DrownedForm,
  PinkForm,
  RainbowForm,
  SpiritForm,
  SummerForm,
  StrikeForm,
  ValencianForm,
  ValentineForm,
  ZombieForm,
];

// lists the forms
const formStrings = [
  "Alter",
  "Ashen",
  "Creator",
  "Drowned",
  "Pink",
  "Rainbow",
  "Spirit",
  "Summer",
  "Strike",
  "Valencian",
  "Valentine",
  "Zombie",
];

// pushes a pokemon name into the given form array if they take that form - I used this to add the names to each form array
// these names have been copied into the file

// function formSorter(array, form) {
//   for (i = 0; i < array.length; i++) {
//     //this loop goes through the array of all pokemon
//     if (array[i].length > 0) {
//       // if the pokemon has a form, its array length will be greater than 0
//       for (j = 0; j < array[i].length; j++) {
//         //this loop goes through the array containing a particular pokemon's forms
//         //need to check if the given form appears in the array, if it does, push the name => array[i][0] into a new array
//         if (array[i][j] === form) {
//           formsArray[k].push(array[i][0]);
//         }
//       }
//     }
//   }
// }

// looks at the array of pokemon, and puts the name into the form array if that pokemon can be of that form
// for (k = 0; k < formStrings.length; k++) {
//   formSorter(bigArray, formStrings[k]);
// }

// console.log(formsArray);

// let insertStatementArray = [];
// for (i = 0; formsArray.length; i++) {
//   // go through the array of all forms
//   let arrayByForm = [];
//   for (j = 0; formsArray[i].length; j++) {
//     // go through the form array
//     // here we need to change the string containing the name into the mysql insert statement
//     // INSERT INTO ${nameOfFormHere} (pokemonName) VALUES (${pokemonNameHere});
//     arrayByForm.push(`INSERT INTO ${formStrings[i]} (pokemonName) VALUES (${formsArray[i][j]});`);
//   }
//   insertStatementArray.push(arrayByForm);
// }

// console.log(insertStatementArray);

// here we generate new arrays from the formArrays, these new arrays contain insert statements

// AlterFormInsert = AlterForm.map((pokemon) => {
//   `INSERT INTO alterform (pokemonName) VALUES (${pokemon});`;
// });

// console.log(AlterFormInsert);

// let ZombieFormInsert = [];
// for (i = 0; i < ZombieForm.length; i++) {
//   ZombieFormInsert.push(`INSERT INTO zombieform (pokemonName) VALUES ('${ZombieForm[i]}');`);
// }

// console.log(ZombieFormInsert);

// get a list of all pokemon and push them into an array

let allPokemonList = [];

let pokes0to99 = [
  "offbyone",
  "bulbasaur",
  "ivysaur",
  "venusaur",
  "charmander",
  "charmeleon",
  "charizard",
  "squirtle",
  "wartortle",
  "blastoise",
  "caterpie",
  "metapod",
  "butterfree",
  "weedle",
  "kakuna",
  "beedrill",
  "pidgey",
  "pidgeotto",
  "pidgeot",
  "rattata",
  "raticate",
  "spearow",
  "fearow",
  "ekans",
  "arbok",
  "pikachu",
  "raichu",
  "sandshrew",
  "sandslash",
  "nidoranF",
  "nidorina",
  "nidoqueen",
  "nidoranM",
  "nidorino",
  "nidoking",
  "clefairy",
  "clefable",
  "vulpix",
  "ninetales",
  "jigglypuff",
  "wigglytuff",
  "zubat",
  "golbat",
  "oddish",
  "gloom",
  "vileplume",
  "paras",
  "parasect",
  "venonat",
  "venomoth",
  "diglett",
  "dugtrio",
  "meowth",
  "persian",
  "psyduck",
  "golduck",
  "mankey",
  "primeape",
  "growlithe",
  "arcanine",
  "poliwag",
  "poliwhirl",
  "poliwrath",
  "abra",
  "kadabra",
  "alakazam",
  "machop",
  "machoke",
  "machamp",
  "bellsprout",
  "weepinbell",
  "victreebel",
  "tentacool",
  "tentacruel",
  "geodude",
  "graveler",
  "golem",
  "ponyta",
  "rapidash",
  "slowpoke",
  "slowbro",
  "magnemite",
  "magneton",
  "farfetchd",
  "doduo",
  "dodrio",
  "seel",
  "dewgong",
  "grimer",
  "muk",
  "shellder",
  "cloyster",
  "gastly",
  "haunter",
  "gengar",
  "onix",
  "drowzee",
  "hypno",
  "krabby",
  "kingler",
];

let pokes100to199 = [
  "voltorb",
  "electrode",
  "exeggcute",
  "exeggutor",
  "cubone",
  "marowak",
  "hitmonlee",
  "hitmonchan",
  "lickitung",
  "koffing",
  "weezing",
  "rhyhorn",
  "rhydon",
  "chansey",
  "tangela",
  "kangaskhan",
  "horsea",
  "seadra",
  "goldeen",
  "seaking",
  "staryu",
  "starmie",
  "mr-mime",
  "scyther",
  "jynx",
  "electabuzz",
  "magmar",
  "pinsir",
  "tauros",
  "magikarp",
  "gyarados",
  "lapras",
  "ditto",
  "eevee",
  "vaporeon",
  "jolteon",
  "flareon",
  "porygon",
  "omanyte",
  "omastar",
  "kabuto",
  "kabutops",
  "aerodactyl",
  "snorlax",
  "articuno",
  "zapdos",
  "moltres",
  "dratini",
  "dragonair",
  "dragonite",
  "mewtwo",
  "mew",
  "chikorita",
  "bayleef",
  "meganium",
  "cyndaquil",
  "quilava",
  "typhlosion",
  "totodile",
  "croconaw",
  "feraligatr",
  "sentret",
  "furret",
  "hoothoot",
  "noctowl",
  "ledyba",
  "ledian",
  "spinarak",
  "ariados",
  "crobat",
  "chinchou",
  "lanturn",
  "pichu",
  "cleffa",
  "igglybuff",
  "togepi",
  "togetic",
  "natu",
  "xatu",
  "mareep",
  "flaaffy",
  "ampharos",
  "bellossom",
  "marill",
  "azumarill",
  "sudowoodo",
  "politoed",
  "hoppip",
  "skiploom",
  "jumpluff",
  "aipom",
  "sunkern",
  "sunflora",
  "yanma",
  "wooper",
  "quagsire",
  "espeon",
  "umbreon",
  "murkrow",
  "slowking",
];

let pokes200to299 = [
  "misdreavus",
  "unown",
  "wobbuffet",
  "girafarig",
  "pineco",
  "forretress",
  "dunsparce",
  "gligar",
  "steelix",
  "snubbull",
  "granbull",
  "qwilfish",
  "scizor",
  "shuckle",
  "heracross",
  "sneasel",
  "teddiursa",
  "ursaring",
  "slugma",
  "magcargo",
  "swinub",
  "piloswine",
  "corsola",
  "remoraid",
  "octillery",
  "delibird",
  "mantine",
  "skarmory",
  "houndour",
  "houndoom",
  "kingdra",
  "phanpy",
  "donphan",
  "porygon2",
  "stantler",
  "smeargle",
  "tyrogue",
  "hitmontop",
  "smoochum",
  "elekid",
  "magby",
  "miltank",
  "blissey",
  "raikou",
  "entei",
  "suicune",
  "larvitar",
  "pupitar",
  "tyranitar",
  "lugia",
  "ho-oh",
  "celebi",
  "treecko",
  "grovyle",
  "sceptile",
  "torchic",
  "combusken",
  "blaziken",
  "mudkip",
  "marshtomp",
  "swampert",
  "poochyena",
  "mightyena",
  "zigzagoon",
  "linoone",
  "wurmple",
  "silcoon",
  "beautifly",
  "cascoon",
  "dustox",
  "lotad",
  "lombre",
  "ludicolo",
  "seedot",
  "nuzleaf",
  "shiftry",
  "taillow",
  "swellow",
  "wingull",
  "pelipper",
  "ralts",
  "kirlia",
  "gardevoir",
  "surskit",
  "masquerain",
  "shroomish",
  "breloom",
  "slakoth",
  "vigoroth",
  "slaking",
  "nincada",
  "ninjask",
  "shedinja",
  "whismur",
  "loudred",
  "exploud",
  "makuhita",
  "hariyama",
  "azurill",
  "nosepass",
];

let pokes300to399 = [
  "skitty",
  "delcatty",
  "sableye",
  "mawile",
  "aron",
  "lairon",
  "aggron",
  "meditite",
  "medicham",
  "electrike",
  "manectric",
  "plusle",
  "minun",
  "volbeat",
  "illumise",
  "roselia",
  "gulpin",
  "swalot",
  "carvanha",
  "sharpedo",
  "wailmer",
  "wailord",
  "numel",
  "camerupt",
  "torkoal",
  "spoink",
  "grumpig",
  "spinda",
  "trapinch",
  "vibrava",
  "flygon",
  "cacnea",
  "cacturne",
  "swablu",
  "altaria",
  "zangoose",
  "seviper",
  "lunatone",
  "solrock",
  "barboach",
  "whiscash",
  "corphish",
  "crawdaunt",
  "baltoy",
  "claydol",
  "lileep",
  "cradily",
  "anorith",
  "armaldo",
  "feebas",
  "milotic",
  "castform",
  "kecleon",
  "shuppet",
  "banette",
  "duskull",
  "dusclops",
  "tropius",
  "chimecho",
  "absol",
  "wynaut",
  "snorunt",
  "glalie",
  "spheal",
  "sealeo",
  "walrein",
  "clamperl",
  "huntail",
  "gorebyss",
  "relicanth",
  "luvdisc",
  "bagon",
  "shelgon",
  "salamence",
  "beldum",
  "metang",
  "metagross",
  "regirock",
  "regice",
  "registeel",
  "latias",
  "latios",
  "kyogre",
  "groudon",
  "rayquaza",
  "jirachi",
  "deoxys",
  "turtwig",
  "grotle",
  "torterra",
  "chimchar",
  "monferno",
  "infernape",
  "piplup",
  "prinplup",
  "empoleon",
  "starly",
  "staravia",
  "staraptor",
  "bidoof",
];

let pokes400to499 = [
  "bibarel",
  "kricketot",
  "kricketune",
  "shinx",
  "luxio",
  "luxray",
  "budew",
  "roserade",
  "cranidos",
  "rampardos",
  "shieldon",
  "bastiodon",
  "burmy",
  "wormadam",
  "mothim",
  "combee",
  "vespiquen",
  "pachirisu",
  "buizel",
  "floatzel",
  "cherubi",
  "cherrim",
  "shellos",
  "gastrodon",
  "ambipom",
  "drifloon",
  "drifblim",
  "buneary",
  "lopunny",
  "mismagius",
  "honchkrow",
  "glameow",
  "purugly",
  "chingling",
  "stunky",
  "skuntank",
  "bronzor",
  "bronzong",
  "bonsly",
  "mime-jr",
  "happiny",
  "chatot",
  "spiritomb",
  "gible",
  "gabite",
  "garchomp",
  "munchlax",
  "riolu",
  "lucario",
  "hippopotas",
  "hippowdon",
  "skorupi",
  "drapion",
  "croagunk",
  "toxicroak",
  "carnivine",
  "finneon",
  "lumineon",
  "mantyke",
  "snover",
  "abomasnow",
  "weavile",
  "magnezone",
  "lickilicky",
  "rhyperior",
  "tangrowth",
  "electivire",
  "magmortar",
  "togekiss",
  "yanmega",
  "leafeon",
  "glaceon",
  "gliscor",
  "mamoswine",
  "porygon-z",
  "gallade",
  "probopass",
  "dusknoir",
  "froslass",
  "rotom",
  "uxie",
  "mesprit",
  "azelf",
  "dialga",
  "palkia",
  "heatran",
  "regigigas",
  "giratina",
  "cresselia",
  "phione",
  "manaphy",
  "darkrai",
  "shaymin",
  "arceus",
  "victini",
  "snivy",
  "servine",
  "serperior",
  "tepig",
  "pignite",
];

let pokes500to599 = [
  "emboar",
  "oshawott",
  "dewott",
  "samurott",
  "patrat",
  "watchog",
  "lillipup",
  "herdier",
  "stoutland",
  "purrloin",
  "liepard",
  "pansage",
  "simisage",
  "pansear",
  "simisear",
  "panpour",
  "simipour",
  "munna",
  "musharna",
  "pidove",
  "tranquill",
  "unfezant",
  "blitzle",
  "zebstrika",
  "roggenrola",
  "boldore",
  "gigalith",
  "woobat",
  "swoobat",
  "drilbur",
  "excadrill",
  "audino",
  "timburr",
  "gurdurr",
  "conkeldurr",
  "tympole",
  "palpitoad",
  "seismitoad",
  "throh",
  "sawk",
  "sewaddle",
  "swadloon",
  "leavanny",
  "venipede",
  "whirlipede",
  "scolipede",
  "cottonee",
  "whimsicott",
  "petilil",
  "lilligant",
  "basculin",
  "sandile",
  "krokorok",
  "krookodile",
  "darumaka",
  "darmanitan",
  "maractus",
  "dwebble",
  "crustle",
  "scraggy",
  "scrafty",
  "sigilyph",
  "yamask",
  "cofagrigus",
  "tirtouga",
  "carracosta",
  "archen",
  "archeops",
  "trubbish",
  "garbodor",
  "zorua",
  "zoroark",
  "minccino",
  "cinccino",
  "gothita",
  "gothorita",
  "gothitelle",
  "solosis",
  "duosion",
  "reuniclus",
  "ducklett",
  "swanna",
  "vanillite",
  "vanillish",
  "vanilluxe",
  "deerling",
  "sawsbuck",
  "emolga",
  "karrablast",
  "escavalier",
  "foongus",
  "amoonguss",
  "frillish",
  "jellicent",
  "alomomola",
  "joltik",
  "galvantula",
  "ferroseed",
  "ferrothorn",
  "klink",
];

let pokes600to699 = [
  "klang",
  "klinklang",
  "tynamo",
  "eelektrik",
  "eelektross",
  "elgyem",
  "beheeyem",
  "litwick",
  "lampent",
  "chandelure",
  "axew",
  "fraxure",
  "haxorus",
  "cubchoo",
  "beartic",
  "cryogonal",
  "shelmet",
  "accelgor",
  "stunfisk",
  "mienfoo",
  "mienshao",
  "druddigon",
  "golett",
  "golurk",
  "pawniard",
  "bisharp",
  "bouffalant",
  "rufflet",
  "braviary",
  "vullaby",
  "mandibuzz",
  "heatmor",
  "durant",
  "deino",
  "zweilous",
  "hydreigon",
  "larvesta",
  "volcarona",
  "cobalion",
  "terrakion",
  "virizion",
  "tornadus",
  "thundurus",
  "reshiram",
  "zekrom",
  "landorus",
  "kyurem",
  "keldeo",
  "meloetta",
  "genesect",
  "chespin",
  "quilladin",
  "chesnaught",
  "fennekin",
  "braixen",
  "delphox",
  "froakie",
  "frogadier",
  "greninja",
  "bunnelby",
  "diggersby",
  "fletchling",
  "fletchinder",
  "talonflame",
  "scatterbug",
  "spewpa",
  "vivillon",
  "litleo",
  "pyroar",
  "flabebe",
  "floette",
  "florges",
  "skiddo",
  "gogoat",
  "pancham",
  "pangoro",
  "furfrou",
  "espurr",
  "meowstic",
  "honedge",
  "doublade",
  "aegislash",
  "spritzee",
  "aromatisse",
  "swirlix",
  "slurpuff",
  "inkay",
  "malamar",
  "binacle",
  "barbaracle",
  "skrelp",
  "dragalge",
  "clauncher",
  "clawitzer",
  "helioptile",
  "heliolisk",
  "tyrunt",
  "tyrantrum",
  "amaura",
  "aurorus",
];

let pokes700to799 = [
  "sylveon",
  "hawlucha",
  "dedenne",
  "carbink",
  "goomy",
  "sliggoo",
  "goodra",
  "klefki",
  "phantump",
  "trevenant",
  "pumpkaboo",
  "gourgeist",
  "bergmite",
  "avalugg",
  "noibat",
  "noivern",
  "xerneas",
  "yveltal",
  "zygarde-50",
  "diancie",
  "hoopa",
  "volcanion",
  "rowlet",
  "dartrix",
  "decidueye",
  "litten",
  "torracat",
  "incineroar",
  "popplio",
  "brionne",
  "primarina",
  "pikipek",
  "trumbeak",
  "toucannon",
  "yungoos",
  "gumshoos",
  "grubbin",
  "charjabug",
  "vikavolt",
  "crabrawler",
  "crabominable",
  "oricorio",
  "cutiefly",
  "ribombee",
  "rockruff",
  "lycanroc",
  "wishiwashi",
  "mareanie",
  "toxapex",
  "mudbray",
  "mudsdale",
  "dewpider",
  "araquanid",
  "fomantis",
  "lurantis",
  "morelull",
  "shiinotic",
  "salandit",
  "salazzle",
  "stufful",
  "bewear",
  "bounsweet",
  "steenee",
  "tsareena",
  "comfey",
  "oranguru",
  "passimian",
  "wimpod",
  "golisopod",
  "sandygast",
  "palossand",
  "pyukumuku",
  "type-null",
  "silvally",
  "minior",
  "komala",
  "turtonator",
  "togedemaru",
  "mimikyu",
  "bruxish",
  "drampa",
  "dhelmise",
  "jangmo-o",
  "hakamo-o",
  "kommo-o",
  "tapu-koko",
  "tapu-lele",
  "tapu-bulu",
  "tapu-fini",
  "cosmog",
  "cosmoem",
  "solgaleo",
  "lunala",
  "nihilego",
  "buzzwole",
  "pheromosa",
  "xurkitree",
  "celesteela",
  "kartana",
  "guzzlord",
];

let pokes800to898 = [
  "necrozma",
  "magearna",
  "marshadow",
  "poipole",
  "naganadel",
  "stakataka",
  "blacephalon",
  "zeraora",
  "meltan",
  "melmetal",
  "grookey",
  "thwackey",
  "rillaboom",
  "scorbunny",
  "raboot",
  "cinderace",
  "sobble",
  "drizzile",
  "inteleon",
  "skwovet",
  "greedent",
  "rookidee",
  "corvisquire",
  "corviknight",
  "blipbug",
  "dottler",
  "orbeetle",
  "nickit",
  "thievul",
  "gossifleur",
  "eldegoss",
  "wooloo",
  "dubwool",
  "chewtle",
  "drednaw",
  "yamper",
  "boltund",
  "rolycoly",
  "carkol",
  "coalossal",
  "applin",
  "flapple",
  "appletun",
  "silicobra",
  "sandaconda",
  "cramorant",
  "arrokuda",
  "barraskewda",
  "toxel",
  "toxtricity",
  "sizzlipede",
  "centiskorch",
  "clobbopus",
  "grapploct",
  "sinistea",
  "polteageist",
  "hatenna",
  "hattrem",
  "hatterene",
  "impidimp",
  "morgrem",
  "grimmsnarl",
  "obstagoon",
  "perrserker",
  "cursola",
  "sirfetchd",
  "mr-rime",
  "runerigus",
  "milcery",
  "alcremie",
  "falinks",
  "pincurchin",
  "snom",
  "frosmoth",
  "stonjourner",
  "eiscue-ice",
  "indeedee-male",
  "morpeko",
  "cufant",
  "copperajah",
  "dracozolt",
  "arctozolt",
  "dracovish",
  "arctovish",
  "duraludon",
  "dreepy",
  "drakloak",
  "dragapult",
  "zacian",
  "zamazenta",
  "eternatus",
  "kubfu",
  "urshifu",
  "zarude",
  "regieleki",
  "regidrago",
  "glastrier",
  "spectrier",
  "calyrex",
];

async function getAllPokemon() {
  const res = await fetch("https://pokeapi.co/api/v2/pokemon/?limit=898&offset=0");
  const data = await res.json();
  for (l = 0; l < data.results.length; l++) {
    allPokemonList.push(data.results[l].name);
  }
  console.log(allPokemonList);
}
getAllPokemon();
